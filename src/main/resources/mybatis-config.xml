<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//ibatis.apache.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 设置参数有顺序要求:properties>settings>typeAliases>typeHandlers>objectFactory>plugins>environments>mappers -->
    <properties>
        <property name="dialectClass" value="com.resto.brand.core.feature.orm.dialect.MySql5Dialect"/>
    </properties>


    <!--指定使用LOG4J来输出，如果这里不指定，不少应用服务器的classpath中已经包含Commons Logging，如Tomcat和WebShpere，-->
    <!--所以MyBatis会把它作为具体的日志实现。记住这点非常重要。这将意味着，在诸如 WebSphere的环境中——WebSphere提供了-->
    <!--Commons Logging的私有实现，你的Log4J配置将被忽略。 这种做法不免让人悲催。-->
    <!--注意:Mybatis中SQL语 句的日志级别被设为DEBUG-->
    <settings>
       <!-- &lt;!&ndash;lazyLoadingEnabled:延迟加载启用(懒加载)，默认是false&ndash;&gt;
        <setting name="lazyLoadingEnabled" value="true"/>
        &lt;!&ndash;积极的懒加载，false是按需加载&ndash;&gt;
        <setting name="aggressiveLazyLoading" value="false"/>
        &lt;!&ndash;开启全局二级缓存&ndash;&gt;
        <setting name="cacheEabled" value="true"/>-->
        <setting name="logImpl" value="LOG4J"/>
        <!-- 全局映射器启用缓存 -->
        <setting name="cacheEnabled" value="true"/>

        <!-- 查询时，关闭关联对象即时加载以提高性能 -->
        <setting name="lazyLoadingEnabled" value="true"/>

        <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
        <setting name="multipleResultSetsEnabled" value="true"/>

        <!-- 允许使用列标签代替列名 -->
        <setting name="useColumnLabel" value="true"/>

        <!-- 不允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
        <setting name="useGeneratedKeys" value="false"/>

        <!-- 给予被嵌套的resultMap以字段-属性的映射支持 FULL,PARTIAL -->
        <setting name="autoMappingBehavior" value="PARTIAL"/>

        <!-- 对于批量更新操作缓存SQL以提高性能 BATCH,SIMPLE -->
         <setting name="defaultExecutorType" value="BATCH" />

        <!-- 数据库超过25000秒仍未响应则超时 -->
         <setting name="defaultStatementTimeout"  value="25000" />

        <!-- Allows using RowBounds on nested statements -->
        <setting name="safeRowBoundsEnabled" value="false"/>

        <!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn. -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!-- MyBatis uses local cache to prevent circular references and speed up repeated nested queries. By default (SESSION) all queries executed during a session are cached. If localCacheScope=STATEMENT
            local session will be used just for statement execution, no data will be shared between two different calls to the same SqlSession. -->
        <setting name="localCacheScope" value="SESSION"/>

        <!-- Specifies the JDBC type for null values when no specific JDBC type was provided for the parameter. Some drivers require specifying the column JDBC type but others work with generic values
            like NULL, VARCHAR or OTHER. -->
        <setting name="jdbcTypeForNull" value="OTHER"/>

        <!-- Specifies which Object's methods trigger a lazy load -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>

        <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
        <setting name="aggressiveLazyLoading" value="false"/>

    </settings>

    <!--<typeHandlers>-->
        <!--<typeHandler handler="com.xxx.canjiacore.persist.respository.mybatisPlugin.handler.EnumTypeHandler" javaType="com.xxx.model.enumeration.Status"/>-->
        <!--<typeHandler handler="com.xxx.canjiacore.persist.respository.mybatisPlugin.handler.EnumTypeHandler" javaType="com.xxx.model.enumeration.Sex"/>-->
    <!--</typeHandlers>-->

    <!--配置别名-->
    <!--<typeAliases>
        <package name="com.resto.shop.web.model"/>
    </typeAliases>-->

    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <property name="helperDialect" value="mysql"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="true"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="true"/>
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="false"/>
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <property name="params" value="pageNum=start;pageSize=limit;"/>
            <!-- 支持通过Mapper接口参数来传递分页参数 -->
            <property name="supportMethodsArguments" value="true"/>

            <property name="autoRuntimeDialect" value="false"/>
            <property name="closeConn" value="true"/>
        </plugin>

        <plugin interceptor="com.daishaowen.test.DuXieFenLi.mybatisLanJie.DateSourceSelectInterceptor"/>
    </plugins>
</configuration>
